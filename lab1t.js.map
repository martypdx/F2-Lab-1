{"version":3,"sources":["lab1.js"],"names":[],"mappings":"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","file":"lab1.js","sourcesContent":["\n/* LAB 1: A Trip to Woodland Park Zoo\n\n Welcome to Lab 1 =)\n\n Be sure to read all the comments!\n\n All of the instructions are inline with the assignment below. Look for the\n word TODO in comments.  Each TODO will have a description of what is\n required.\n\n To run this file, type the following (in the terminal):\n\n    node lab1.js\n\n and then press enter/return.\n\n Instructions for turning this lab in are in the assignment description in\n Canvas.\n\n I'm happy to answer any questions on Slack or through the discussions in Canvas. I will post the\n questions I receive and the answers I give to a discussion group in Canvas.\n\n*/\n\n/* ----------------- Helper ------------------------------------------------\n We've implemented a function that will help you sanity-check your code.\n*/\n\n/*\n\nvar array = [ 1, 2, 3 ];\nvar map = array.map(each => each * 10);\nconsole.log(map);\n\nvar foo = 'qux';\n\nif(true){\n  let foo = 'bar';\n  console.log(foo);\n}\n\nfunction multiple(x, y = x){\n  return x * y;\n}\n\n\nconsole.log(multiple(3));\n\nvar a = [];\nvar first = Array.isArray(a) ? a[0] : undefined;\n*/\n\nfunction assert(expression, failureMessage) {\n  if (!expression) {\n    console.warn(\"assertion failure: \", failureMessage);\n  }\n}\n\n/*\n An assertion is something we expect to be true about the state of the\n program at the point where the assertion is made.\n\n Remember, state is all the variables that we've declared and their current\n values.\n\n Here are some examples for how to use the assert method:\n*/\n\n// assert(1 === 1);\n// assert(1 === 2, \"this is an assertion failure example. 1===2\");\n\n/*\n TODO: 8 points\n Invoke assert twice. Use any boolean expressions that you like, but preferably\n zoo-themed.  Make one pass and one fail. In the failure message, describe why\n it failed.\n*/\n\n\nvar ticketPrice = 7.50;\nassert(ticketPrice === 7.50, \"The price of admission is no longer $7.50.\");\nassert(\"llama\" === \"emu\", \"Those are two different animals.\");\n\n\n\n/* ----------------- Meerkats -------------------------------------------------\n Meerkats make a sort of chirping noise (according to my 30 seconds of\n research).  We're going to translate two sentences into meerkat speech.\n*/\n\nvar sentence1 = \"More food please.\",\n    sentence2 = \"Come over here so you can scratch my belly.\";\n\n/*\n TODO: 20 points\n Your goal is to replace the words in the above sentences with \"chirp\". The\n assertions at the end of this section should pass when you're done.  Use\n **two** different kinds of loops to implement this.\n HINT: the \"split\" method on String will be useful.\n*/\n\n// make two arrays out of the strings\n\nvar sentence1Array = sentence1.split(' ');\nvar sentence2Array = sentence2.split(' ');\n\n// replace all words with chirp\n\nfor(var i = 0; i < sentence1Array.length; i++){\n  sentence1Array[i] = 'chirp';\n}\n\n// rejoin the array into the original string and add a '.'\n\nsentence1 = sentence1Array.join(' ');\nsentence1 += '.';\n\n// second way of doing the same thing ... clear out the original string\n\nsentence2 = '';\n\n// for each word in the array, add a chirp\n\nwhile(sentence2Array.length){\n  sentence2Array.shift();\n  sentence2 += 'chirp ';\n}\n\n// remove the last space and add a '.'\n\nsentence2 = sentence2.substring(0, sentence2.length - 1);\nsentence2 += '.';\n\n\nassert(sentence1 === \"chirp chirp chirp.\", \"sentence 1 should have 3 chirps\");\nassert(sentence2 === \"chirp chirp chirp chirp chirp chirp chirp chirp chirp.\",\n  \"sentence 2 should have 9 chirps\");\n\n/* ----------------- Favorite Animals ----------------------------------------\n The zoo is closing in 20 minutes. You still haven't seen your four favorite\n animals. You only have time for one. Use Math.random() to pick which animal\n to see next. http://www.w3schools.com/jsref/jsref_random.asp\n Hint: read the whole Math.random description on that page and try the examples\n*/\n\nvar favoriteAnimals = [ \"elephant\", \"penguin\", \"eagle\", \"camel\" ],\n    nextAnimal;\n\n// TODO: 10 points\n// Assign one of your favorite animals to nextAnimal using Math.random() to pick\n\nnextAnimal = favoriteAnimals[Math.floor(Math.random() * 4)];\n\nassert(nextAnimal, \"assign something to nextAnimal\");\n\n/* ----------------- Hungry Lion ----------------------------------------\n As long as the lion is well-fed, he doesn't take too much heed of the\n humans that pass through. Unfortunately, the new caretaker is a little\n absent minded.\n\n The lion needs 4 meals per day on average to stay happy. You're going to\n figure out how many days it took before the lion decided to supplement his\n diet with the caretaker.\n*/\n\n// number of times the new caretaker fed the lion. one array entry per day\nvar mealsPerDay = [ 5, 4, 3, 6, 2, 4, 3, 4, 5, 1 ],\n    tooHungryDay;\n\n/*\n TODO: 20 points\n Cycle through the days in mealsPerDay. At each day, print out the average\n number of meals/day the lion got since the new caretaker started.\n tooHungryDay should receive the number of days before the lion started\n pondering protein supplements (the first day the average dips below 4\n meals)\n*/\n\nvar totalMeals = 0,\n    avgMeals = 0.0;\n\nfor(var i = 1; i <= mealsPerDay.length; i++){\n  totalMeals += mealsPerDay[i-1];\n  avgMeals = totalMeals/i;\n  console.log(\"Day \" + i + \": \" + avgMeals + \" average meals per day.\");\n\n  if(avgMeals < 4 && !tooHungryDay){\n    tooHungryDay = i;\n  }\n}\n\nconsole.log(\"The caretaker lasted until Day \" + tooHungryDay + \".\");\n\nassert(tooHungryDay, \"don't forget to assign the answer to tooHungryDay\");\nassert(tooHungryDay < 10, \"the lion is too hungry before the end of the array\");\n\n/* ----------------- Code Style ----------------------------------------\n TODO: 10 points\n Now, we're going to use two tools: jshint and jscs, to check our code for\n best-practices and style consistency.\n\n If you haven't already, run this command in the terminal (inside of this\n directory): npm install\n\n run the tools with:\n  ./node_modules/.bin/grunt jshint\n  ./node_modules/.bin/grunt jscs\n\nor, if you installed grunt globally, you can just type\n  $ grunt\n   and it will run both.\n\n Error and warning descriptions will be printed in the terminal.\n To get full points, correct all of the errors/warnings.\n*/\n\n"]}